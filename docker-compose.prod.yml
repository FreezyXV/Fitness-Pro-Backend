version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fitness-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/uploads:/var/www/html/public/uploads
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - fitness-network

  nginx:
    image: nginx:alpine
    container_name: fitness-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - fitness-network

  db:
    image: postgres:15-alpine
    container_name: fitness-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: fitness_app_prod
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    ports:
      - "5432:5432"
    networks:
      - fitness-network

  redis:
    image: redis:7-alpine
    container_name: fitness-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - fitness-network

  queue:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fitness-queue
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3 --timeout=90
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - fitness-network

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: fitness-scheduler
    restart: unless-stopped
    command: sh -c "while true; do php artisan schedule:run >> /dev/null 2>&1; sleep 60; done"
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
    networks:
      - fitness-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fitness-network:
    driver: bridge